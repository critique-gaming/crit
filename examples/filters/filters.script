local filters = require "crit.filters"

local low_pass_filter = filters.low_pass(1.0)
local high_pass_filter = filters.high_pass(1.0)

function init(self)
	self.value = vmath.vector3(0.0)
	self.previous_value = self.value
	self.lp_filtered_value = self.value
	self.hp_filtered_value = vmath.vector3(0.0)

	sprite.set_constant("low_pass_indicator#sprite", "tint", vmath.vector4(1.0, 0.0, 0.0, 1.0))
	sprite.set_constant("high_pass_indicator#sprite", "tint", vmath.vector4(0.0, 0.0, 1.0, 1.0))
	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	self.lp_filtered_value = low_pass_filter(
		self.lp_filtered_value,
		self.value,
		dt
	)

	self.hp_filtered_value = high_pass_filter(
		self.hp_filtered_value,
		self.value - self.previous_value,
		dt
	)
	self.previous_value = self.value
	
	go.set_position(self.lp_filtered_value, "low_pass_indicator")
	go.set_position(self.hp_filtered_value, "high_pass_indicator")
end

function on_input(self, action_id, action)
	if action_id == nil then
		self.value = vmath.vector3(action.x, action.y, 0.0)
	end
end